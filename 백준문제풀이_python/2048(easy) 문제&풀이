12100번 문제

입력
첫째 줄에 보드의 크기 N (1 ≤ N ≤ 20)이 주어진다. 둘째 줄부터 N개의 줄에는 게임판의 초기 상태가 주어진다. 0은 빈 칸을 나타내며, 이외의 값은 모두 블록을 나타낸다. 블록에 쓰여 있는 수는 2보다 크거나 같고, 1024보다 작거나 같은 2의 제곱꼴이다. 블록은 적어도 하나 주어진다.

출력
최대 5번 이동시켜서 얻을 수 있는 가장 큰 블록을 출력한다.

예제 입력 1 
3
2 2 2
4 4 4
8 8 8

예제 출력 1 
16


<문제풀이>
from copy import deepcopy

N = int(input())
Board = [list(map(int,input().split())) for i in range(N)]


def rotate90(B,N):
    NB = deepcopy(B)
    for i in range(N):
        for j in range(N):
            NB[j][N-i-1]=B[i][j]
    return NB 

def convert(lst,N):
    new_list = [i for i in lst if i] #양수만 복사
    for i in range(1,len(new_list)):
        if new_list[i-1] == new_list[i]:
            new_list[i-1]*=2
            new_list[i]=0
    new_list = [i for i in new_list if i]
    return new_list + [0] *(N-len(new_list)) #나머지 0으로 채우고 리턴

def dfs(N,B,count):
    ret = max([max(i) for i in B])
    if count==0:
        return ret
    for _ in range(4):
        X = [convert(i,N) for i in B]
        if X != B:
            ret = max(ret,dfs(N,X,count-1))
        B = rotate90(B,N)
    return ret



print(dfs(N,Board,5))



#BoardCopy = deepcopy(Board) 
#ㅍㅏ이썬에서 =만하면 주소값만 복사할 수 있음, 주소값말고 값을 모두 복사 


