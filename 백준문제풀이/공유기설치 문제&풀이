< 2110번 문제 >

문제
도현이의 집 N개가 수직선 위에 있다. 각각의 집의 좌표는 x1, ..., xN이고, 집 여러개가 같은 좌표를 가지는 일은 없다.

도현이는 언제 어디서나 와이파이를 즐기기 위해서 집에 공유기 C개를 설치하려고 한다. 최대한 많은 곳에서 와이파이를 사용하려고 하기 때문에, 한 집에는 공유기를 하나만 설치할 수 있고, 가장 인접한 두 공유기 사이의 거리를 가능한 크게 하여 설치하려고 한다.

C개의 공유기를 N개의 집에 적당히 설치해서, 가장 인접한 두 공유기 사이의 거리를 최대로 하는 프로그램을 작성하시오.

입력
첫째 줄에 집의 개수 N (2 ≤ N ≤ 200,000)과 공유기의 개수 C (2 ≤ C ≤ N)이 하나 이상의 빈 칸을 사이에 두고 주어진다. 둘째 줄부터 N개의 줄에는 집의 좌표를 나타내는 xi (0 ≤ xi ≤ 1,000,000,000)가 한 줄에 하나씩 주어진다.

출력
첫째 줄에 가장 인접한 두 공유기 사이의 최대 거리를 출력한다.

< 예제 입력 1 >
5 3
1
2
8
4
9

< 예제 출력 1 >
3


<문제풀이 >
- 집의 개수 n은 최대 200,000이며 집의 좌표 x는 최대 1,000,000,000임
- 이진탐색을 이용해 O(N*logX)에 문제해결 가능
- 가장 인접한 두 공유기 사이의 최대 Gap을 이진탐색으로 찾기


- 반복적으로 Gap을 설정하며 , C개 이상의 공유기를 설치할 수 있는 경우 찾기
-> max_Gap = 8, min_Gap=1 => mid_Gap=4, 이때 설치 가능한 공유기 개수 = 2 < C ==>> Gap 감소시키기
-> max_Gap=mid_Gap-1=3 , min_Gap=1 =>mid_Gap=2 , 이때 설치 가능한 공유기 개수 = 3 >=C  ==> 현재 Gap을 저장한 뒤 Gap증가시키기
-> max_Gap=3 , min_Gap=mid_Gap+1 = 3 => mid_Gap=3 , 이때 설치 가능한 공유기 개수 = 3 >=C ==> 더이상 Gap을 증가시킬 수 없음, 최적의 경우

 
**이진탐색
- 재귀적으로 풀기
- 반복적으로 풀기 (v)


n,c = list(map(int,input().split(' ')))
array=[]

for _ in range(n):
    array.append(int(input()))
array = sorted(array)

start = array[1] - array[0]
end = array[-1] - array[0]
result=0

while(start<=end):
    mid = (start+end)//2
    value=array[0]
    count=1
    for i in range(1,len(array)):
        if array[i] >= value+mid:
            value = array[i]
            count+=1
    if count>=c:
        start=mid+1
        result=mid
    else:
        end=mid-1
    
print(result)